generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model academic_programs {
  id                         String               @id
  name                       String
  degree                     String
  institution                String
  accreditation              String?
  description                String?
  startDate                  DateTime
  expectedEnd                DateTime
  currentYear                Int                  @default(1)
  totalYears                 Int                  @default(4)
  mode                       String?
  status                     AcademicStatus       @default(ACTIVE)
  createdAt                  DateTime             @default(now())
  updatedAt                  DateTime
  actualGraduationDate       DateTime?
  dissertationDeadline       DateTime?
  dissertationStarted        Boolean              @default(false)
  dissertationSubmissionDate DateTime?
  dissertationSubmitted      Boolean              @default(false)
  dissertationTitle          String?
  courses                    courses[]
  skill_progressions         skill_progressions[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model blog_categories {
  id              String       @id
  name            String       @unique
  slug            String       @unique
  description     String?
  color           String       @default("#3B82F6")
  icon            String?
  metaTitle       String?
  metaDescription String?
  isActive        Boolean      @default(true)
  sortOrder       Int          @default(0)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime
  blog_posts      blog_posts[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model blog_comments {
  id         String     @id
  content    String
  author     String
  email      String
  website    String?
  isApproved Boolean    @default(false)
  likes      Int        @default(0)
  postId     String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime
  blog_posts blog_posts @relation(fields: [postId], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model blog_posts {
  id              String          @id
  title           String
  slug            String          @unique
  excerpt         String?
  content         String
  coverImage      String?
  categoryId      String
  tags            String[]
  status          BlogStatus      @default(DRAFT)
  metaTitle       String?
  metaDescription String?
  authorId        String
  views           Int             @default(0)
  likes           Int             @default(0)
  publishedAt     DateTime?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime
  courseId        String?
  seriesId        String?
  seriesOrder     Int?
  blog_comments   blog_comments[]
  users           users           @relation(fields: [authorId], references: [id])
  blog_categories blog_categories @relation(fields: [categoryId], references: [id])
  courses         courses?        @relation(fields: [courseId], references: [id])
  blog_series     blog_series?    @relation(fields: [seriesId], references: [id])
}

model blog_series {
  id              String       @id
  title           String
  slug            String       @unique
  description     String?
  coverImage      String?
  color           String       @default("#3B82F6")
  icon            String?
  sortOrder       Int          @default(0)
  isActive        Boolean      @default(true)
  authorId        String
  totalPosts      Int          @default(0)
  estimatedTime   Int?
  difficulty      String?
  tags            String[]
  metaTitle       String?
  metaDescription String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime
  blog_posts      blog_posts[]
  users           users        @relation(fields: [authorId], references: [id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model contacts {
  id        String   @id
  name      String
  email     String
  subject   String?
  message   String
  createdAt DateTime @default(now())
  read      Boolean  @default(false)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model course_assessments {
  id        String         @id
  courseId  String
  title     String
  type      AssessmentType
  weight    Int
  dueDate   DateTime?
  completed Boolean        @default(false)
  grade     String?
  feedback  String?
  createdAt DateTime       @default(now())
  updatedAt DateTime
  courses   courses        @relation(fields: [courseId], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model courses {
  id                 String               @id
  code               String
  title              String
  description        String?
  credits            Int                  @default(15)
  programId          String?
  year               Int
  semester           String
  objectives         String[]
  topics             String[]
  prerequisites      String[]
  status             CourseStatus         @default(UPCOMING)
  startDate          DateTime?
  endDate            DateTime?
  grade              String?
  syllabus           String?
  textbooks          String[]
  resources          String[]
  instructor         String?
  instructorBio      String?
  officeHours        String?
  isPublic           Boolean              @default(true)
  featured           Boolean              @default(false)
  sortOrder          Int                  @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime
  skillsDelivered    String[]
  blog_posts         blog_posts[]
  course_assessments course_assessments[]
  academic_programs  academic_programs?   @relation(fields: [programId], references: [id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model demo_requests {
  id          String        @id
  name        String
  email       String
  company     String?
  projectType String
  budget      String?
  timeline    String?
  description String
  createdAt   DateTime      @default(now())
  status      RequestStatus @default(PENDING)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portfolio_pages {
  id              String   @id
  slug            String   @unique
  title           String
  description     String?
  content         Json?
  metaTitle       String?
  metaDescription String?
  isPublished     Boolean  @default(false)
  isHomepage      Boolean  @default(false)
  sortOrder       Int      @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portfolio_sections {
  id          String      @id
  name        String
  displayName String
  sectionType SectionType
  title       String?
  subtitle    String?
  description String?
  content     Json?
  settings    Json?
  isActive    Boolean     @default(true)
  sortOrder   Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model projects {
  id                  String        @id
  title               String
  slug                String        @unique
  description         String
  shortDesc           String?
  image               String?
  technologies        String[]
  featured            Boolean       @default(false)
  flagship            Boolean       @default(false)
  isActive            Boolean       @default(true)
  status              ProjectStatus @default(READY)
  sortOrder           Int           @default(0)
  liveUrl             String?
  githubUrl           String?
  highlights          String[]
  detailedDescription String?
  challenges          String?
  solutions           String?
  results             String?
  clientName          String?
  projectDuration     String?
  teamSize            String?
  myRole              String?
  startDate           DateTime?
  endDate             DateTime?
  createdAt           DateTime      @default(now())
  updatedAt           DateTime
  showWipWarning      Boolean       @default(true)
  wipWarningText      String?
  wipWarningEmoji     String?       @default("ðŸš§")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model site_settings {
  id          String   @id
  key         String   @unique
  value       String
  type        String   @default("text")
  description String?
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model skill_progressions {
  id                String             @id
  skillId           String
  programId         String?
  currentLevel      Int                @default(0)
  targetLevel       Int                @default(100)
  year1Target       Int?
  year2Target       Int?
  year3Target       Int?
  year4Target       Int?
  lastUpdated       DateTime           @default(now())
  autoUpdate        Boolean            @default(true)
  isAcademicSkill   Boolean            @default(false)
  isTechnicalSkill  Boolean            @default(false)
  academic_programs academic_programs? @relation(fields: [programId], references: [id])
  skills            skills             @relation(fields: [skillId], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model skills {
  id                 String               @id
  name               String
  category           SkillCategory
  level              Int
  icon               String?
  color              String?
  isActive           Boolean              @default(true)
  sortOrder          Int                  @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime
  skill_progressions skill_progressions[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id          String        @id
  email       String        @unique
  name        String
  password    String
  role        UserRole      @default(ADMIN)
  isActive    Boolean       @default(true)
  lastLogin   DateTime?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  blog_posts  blog_posts[]
  blog_series blog_series[]
}

enum AcademicStatus {
  ACTIVE
  COMPLETED
  DEFERRED
  WITHDRAWN
}

enum AssessmentType {
  EXAM
  ASSIGNMENT
  PROJECT
  PRESENTATION
  ESSAY
  QUIZ
  PARTICIPATION
}

enum BlogStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum CourseStatus {
  UPCOMING
  IN_PROGRESS
  COMPLETED
  DEFERRED
  WITHDRAWN
}

enum ProjectStatus {
  WIP
  READY
}

enum RequestStatus {
  PENDING
  CONTACTED
  IN_PROGRESS
  COMPLETED
  DECLINED
}

enum SectionType {
  HERO
  ABOUT
  PROJECTS
  SKILLS
  CONTACT
  CUSTOM
}

enum SkillCategory {
  FRONTEND
  BACKEND
  DATABASE
  TOOLS
  DESIGN
  OTHER
  ACADEMIC
}

enum UserRole {
  ADMIN
  VIEWER
}
